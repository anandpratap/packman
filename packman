#!/usr/bin/env ruby

if not ENV.has_key? 'PACKMAN_ROOT'
  print "[Error]: #{File.expand_path(File.dirname(__FILE__))}/setup.sh is not sourced!\n"
  exit
end

$LOAD_PATH << "#{ENV['PACKMAN_ROOT']}/framework"
$LOAD_PATH << "#{ENV['PACKMAN_ROOT']}/packages"
require 'packman_framework'
require 'packman_packages'

case PACKMAN::CommandLine.subcommand
when :collect
  PACKMAN::ConfigManager.parse
  PACKMAN.collect_packages
when :install
  PACKMAN::ConfigManager.parse
  PACKMAN.install_packages
when :switch
  PACKMAN::ConfigManager.parse
  PACKMAN.switch_packages
when :mirror
  PACKMAN::ConfigManager.parse
  PACKMAN.mirror_packages
when :update
  PACKMAN.cd ENV['PACKMAN_ROOT']
  if not Dir.exist? '.git'
    PACKMAN.report_error "PACKMAN is not gained through GIT! You can download PACKMAN by:\n"+
      "#{PACKMAN::Tty.blue}==> #{PACKMAN::Tty.reset}git clone https://github.com/dongli/packman"
  end
  system 'git pull'
  PACKMAN.cd_back
when :help
  PACKMAN::CommandLine.print_usage
else
  PACKMAN.report_error "Unknown subcommand #{PACKMAN::CommandLine.subcommand}!"
end
